<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SpringBoot单例对象注入多例对象</title>
      <link href="/2019/07/13/springboot-dan-li-zhu-ru-duo-li/"/>
      <url>/2019/07/13/springboot-dan-li-zhu-ru-duo-li/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近在学习redis集群，从最开始的安装，配置，到shards（分片）机制，sentinel(哨兵)机制，到最后的cluster（集群）机制。在测试哨兵机制的时候，踩了一个坑，经过一天的排查最后确定了问题，解决了问题，作为一个小白还是蛮开心的。话不说多直接上问题。</p></blockquote><p><img src="/img/20190713/p1.png" alt="异常"></p>]]></content>
      
      
      <categories>
          
          <category> 踩坑实录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA编程 </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMWare的连接方式</title>
      <link href="/2019/07/12/vmware-de-san-chong-lian-jie-fang-shi/"/>
      <url>/2019/07/12/vmware-de-san-chong-lian-jie-fang-shi/</url>
      
        <content type="html"><![CDATA[<blockquote><p>VMWare是一款桌面虚拟化的产品,作为程序猿来说常用作在学习linux(为了学习linux,买一台服务器可是太浪费了).最早在没接触编程,之前就使用过.当时是为了玩一款游戏,自己在虚拟机搭建服务器,将网游作为单机玩.跟着教程也是一步步搭建起来了,但是现在想想也为当初的不求甚解,付出了代价</p></blockquote><blockquote><p>接下来介绍一下它们分别是：</p><ol><li>Bridged（桥接模式）</li><li>NAT（网络地址转换模式）</li><li>Host-Only（仅主机模式）</li></ol></blockquote><hr><h2 id="VMWare三种网络连接方式"><a href="#VMWare三种网络连接方式" class="headerlink" title="VMWare三种网络连接方式"></a>VMWare三种网络连接方式</h2><blockquote><p>首先打开虚拟网络编辑器我们可以看见三个模式分别是VMnet0（桥接模式）、VMnet1（仅主机模式）、VMnet8（NAT模式),其中在VMnet1、VMnet8物理主机会为他们分配两块虚拟网卡</p></blockquote><p><img src="/img/vmware/host1.png" alt="编辑器"></p><p><img src="/img/vmware/host2.png" alt="编辑器"></p><h3 id="Bridged桥接模式"><a href="#Bridged桥接模式" class="headerlink" title="Bridged桥接模式"></a>Bridged桥接模式</h3><blockquote><p>桥接模式就是使用物理主机网卡与虚拟机的虚拟网卡搭建网桥进行网路通信,类似于将物理主机作为交换机,这种方式完全可以将虚拟机当作网络中另一台”物理主机”  </p></blockquote><blockquote><p>桥接模式需要物理主机与虚拟机处于同一网段,并且网关,与DNS与主机保持一致,这时虚拟主机即可实现上网功能,在该模式下,会占用局域网ip资源,并且网络中其他主机,与该物理主机相同,都具有访问该虚拟机的权限,所以该模式不安全</p></blockquote><p><img src="/img/vmware/host3.png" alt="Bridged桥接模式"></p><h3 id="NAT模式"><a href="#NAT模式" class="headerlink" title="NAT模式"></a>NAT模式</h3><blockquote><p>NAT : Network Address Translation，网络地址转换<br>NAT是一种比较安全的连接方式,它所有访问网络的数据都是由主机提供的,类似于该主机与主机中的虚拟机处于同一局域网下,所以一般从外界主机是访问不到该虚拟主机的,虚拟NAT设备与虚拟DHCP服务器一起连接在虚拟交换机VMnet8上，这样就实现了虚拟机联网。<br>VMnet8的作用是实现主机与虚拟机互相通信，可以通过禁用VMnet8网卡测试虚拟机与外网和本机的连接状态，测试结果为VMnet8网卡不影响虚拟机连接 Internet，但是与主机连接失败</p></blockquote><p><img src="/img/vmware/host4.png" alt="NAT模式"></p><p><img src="/img/vmware/NAT8.png" alt="NAT模式"></p><p><img src="/img/vmware/NAT9.png" alt="NAT模式"></p><h3 id="Host-Only（仅主机模式）"><a href="#Host-Only（仅主机模式）" class="headerlink" title="Host-Only（仅主机模式）"></a>Host-Only（仅主机模式）</h3><blockquote><p>该模式就是NAT模式去除了NAT网卡，使虚拟机只能和主机通信，不能与Internet通信。这种模式使用最少，至少我到现在没有使用过，该模式使用的是VMnet1网卡，如果想了解更多自行百度吧，我这里就不介绍过多了。</p></blockquote><h2 id="NAT模式的虚拟转发"><a href="#NAT模式的虚拟转发" class="headerlink" title="NAT模式的虚拟转发"></a>NAT模式的虚拟转发</h2><blockquote><p>前两天想用自己的笔记本连到同网络台式的虚拟机中,因为某些原因，我台式与虚拟机使用NAT方式连接，当时也不太明白三种连接方式的区别，无意义的捣鼓一上午没什么进展，后来发现了端口转发功能，但是按照步骤一部部设置完了，结果还是连接不上，排查好久才发现上午把NAT模式的默认IP更改了，虚拟机广播的是196字段，我连接的是176字段，导致台式主机找不到虚拟机的IP，所以就去研究了下三种连接方式的区别。以此记录，下面我介绍下NAT模式的虚拟转发</p></blockquote><blockquote><p>正常情况下NAT的连接模式是不允许外部计算机访问内部的虚拟计算机的，但是可以使用VMWare的端口转发功能来实现该功能，原理就是外部主机请求物理主机某一个端口，物理主机接到该端口的请求转发虚拟机对应的某个端口，实现起来相对也比较简单</p></blockquote><p><img src="/img/vmware/NAT1.png" alt="NAT模式"></p><p><img src="/img/vmware/NAT2.jpg" alt="NAT模式"></p><blockquote><p>下图是在学习时使用了端口转发具体流程图</p></blockquote><p><img src="/img/vmware/all.png" alt="NAT模式"></p><hr><blockquote><p>以上就是我对VMWare的连接方式简单理解，如果有错误的地方希望大家多多指正（来自一个小白的真心求教），谢谢</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 踩坑实录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMWare </tag>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown语法</title>
      <link href="/2019/07/08/markdown-yu-fa/"/>
      <url>/2019/07/08/markdown-yu-fa/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。<br>Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。<br>Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。<br>Markdown 编写的文档后缀为 .md, .markdown。</p></blockquote><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><blockquote><p>用1-6个#代表html中<code>&lt;h1&gt;-&lt;h6&gt;</code>标题样式,该主题中对标题样式有修改</p></blockquote><p><strong>代码示例</strong></p><pre><code>    # 标题1                     ## 标题2                   ### 标题3                #### 标题4                  ##### 标题5    ###### 标题6               </code></pre><h2 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h2><blockquote><p>段落不需要特殊的标志，以两个空格加上回车表示换行  </p></blockquote><p> 段落一<br> 段落二（没加空格）<br> 段落三（加空格） </p><p><strong>代码示例</strong></p><pre><code>    段落一    段落二（没加空格）      段落三（加空格）</code></pre><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><blockquote><p>markdown中带有默认的字体样式，但改变颜色，字体，大小,位置等需要自己写html代码标签</p></blockquote><p><em>斜体文本</em><br><em>斜体文本</em><br><strong>粗体文本</strong><br><strong>粗体文本</strong><br><strong><em>粗斜体文本</em></strong><br><font size="5" color="red" face="楷体"><strong><em>粗斜体文本</em></strong>  </font></p><p><strong>代码示例</strong></p><pre><code>    *斜体文本*    _斜体文本_    **粗体文本**    __粗体文本__    ***粗斜体文本***    &lt;font size=6 color=red face=&quot;楷体&quot;&gt;___粗斜体文本___  &lt;/font&gt;</code></pre><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><blockquote><p>可以用至少三个个星号，减号等建立一个分割线，个人感觉还是很人性化的</p></blockquote><hr><p><strong>代码示例</strong></p><pre><code>    -----------    **************</code></pre><h2 id="删除线，下划线"><a href="#删除线，下划线" class="headerlink" title="删除线，下划线"></a>删除线，下划线</h2><blockquote><p>删除线在文字上添加中划线，也就是删除线在文字前后添加两个~~即可<br>下划线是通过html<code>&lt;u&gt;</code>标签来实现的  </p></blockquote><p><del>删除线</del><br><u>下划线</u>  </p><p><strong>代码示例</strong></p><pre><code>    ~~删除线~~      &lt;u&gt;下划线&lt;/u&gt; </code></pre><h2 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h2><blockquote><p>脚注就是对文本补充说明具体样式如下(PS:我的编辑器不支持T_T)</p></blockquote><p>&nbsp;正文<a href="脚注内容">^3</a>文字  </p><p><strong>代码示例</strong></p><pre><code>    正文[^3]文字      [^3]: 脚注内容</code></pre><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><blockquote><p>列表分为有序列表与无序列表，有序列表使用 数字.加空格 例 <code>1.</code>实现，无序列表可以使用<code>*</code>,<code>+</code>,<code>-</code>作为标记实现，列表嵌套时在父列表下添加缩进</p></blockquote><p>无序列表  </p><ul><li>第一项</li><li>第二项</li><li>第三项  </li></ul><ul><li>第一项</li><li>第二项</li><li>第三项  </li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><p>有序列表</p><ol><li>第一项<ul><li>嵌套无序列表一</li><li>嵌套无序列表二</li></ul></li><li>第二项<ul><li>嵌套无序列表一</li><li>嵌套无序列表二</li></ul></li><li>第三项<ul><li>嵌套无序列表一</li><li>嵌套无序列表二</li></ul></li></ol><p><strong>代码示例</strong></p><pre><code>    无序列表      * 第一项    * 第二项    * 第三项      - 第一项    - 第二项    - 第三项      + 第一项    + 第二项    + 第三项    有序列表    1. 第一项        - 嵌套无序列表一        - 嵌套无序列表二    2. 第二项        - 嵌套无序列表一        - 嵌套无序列表二    3. 第三项        - 嵌套无序列表一        - 嵌套无序列表二</code></pre><h2 id="区块"><a href="#区块" class="headerlink" title="区块"></a>区块</h2><blockquote><p>区块是在段落开头使用<code>&gt;</code>加空格符号使用</p></blockquote><p>简单引用</p><blockquote><p>区块引用<br>区块引用<br>区块引用  </p></blockquote><p>嵌套引用</p><blockquote><p>区块1</p><blockquote><p>区块2</p><blockquote><p>区块3</p></blockquote></blockquote></blockquote><p>区块列表</p><blockquote><p>区块引用</p><ul><li>第一个</li><li>第二个</li></ul><ol><li>第一个</li><li>第二个</li></ol></blockquote><p>列表区块  </p><ol><li>第一条<blockquote><p>区块引用</p></blockquote></li><li>第二条<blockquote><p>区块引用</p></blockquote></li></ol><p><strong>代码示例</strong></p><pre><code>    简单引用    &gt; 区块引用      &gt; 区块引用      &gt; 区块引用      嵌套引用    &gt; 区块1    &gt;&gt; 区块2    &gt;&gt;&gt; 区块3    区块列表    &gt; 区块引用    &gt; - 第一个    &gt; - 第二个    &gt; 1. 第一个    &gt; 2. 第二个    列表区块      1. 第一条        &gt; 区块引用    2. 第二条        &gt; 区块引用</code></pre><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><blockquote><p>如果单个代码片段可以使用 ` 反引号把它包起来，代码区块使用4个空格，即一个制表符（Tab），或者一对 ``` 标签将代码包起来并可以指定语言</p></blockquote><p>代码片段<br><code>System.out.print(&quot;hello world&quot;)</code>  </p><p>代码区块  </p><pre><code>public static void main(String[] args){    System.out.print(&quot;hello world&quot;);}</code></pre><pre class="line-numbers language-java"><code class="language-java"> <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"hello world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>代码示例</strong></p><pre><code>    代码片段      `System.out.print(&quot;hello world&quot;)`      代码区块          public static void main(String[] args){            System.out.print(&quot;hello world&quot;);        }    ```java    public static void main(String[] args){            System.out.print(&quot;hello world&quot;);        }    ```</code></pre><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><blockquote><p>超链接使用[连接名称](连接地址)或者&lt;连接地址&gt;来实现html中<code>&lt;a&gt;&lt;/a&gt;</code>标签的使用<br>可以结合变量附带连接类似于脚注</p></blockquote><p>这是一个连接<a href="http://www.fbxblog.xyz" target="_blank" rel="noopener">我的博客</a></p><p><a href="http://www.fbxblog.xyz" target="_blank" rel="noopener">http://www.fbxblog.xyz</a></p><p>这个是变量1的连接<a href="http://google.com/" title="Google" target="_blank" rel="noopener">1</a><br>这个是变量2的连接<a href="http://baidu.com/" title="Baidu" target="_blank" rel="noopener">2</a></p><p><strong>代码示例</strong>  </p><pre><code>    这是一个连接[我的博客](http://www.fbxblog.xyz)    &lt;http://www.fbxblog.xyz&gt;    这个是变量1的连接[google]    这个是变量2的连接[baidu]  [google]: http://google.com/        &quot;Google&quot;   [baidu]: http://baidu.com/         &quot;Baidu&quot;</code></pre><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><blockquote><p>图片格式为<code>![alt 属性文本](图片地址 &quot;标题&quot;)</code>,属性文本位置为图片加载失败时显示内容,”标题”为鼠标接触时的提示信息</p></blockquote><p><img src="https://www.baidu.com/img/bd_logo1.png" alt="pic 图片" title="百度搜索"></p><blockquote><p>也可用变量来表示地址值</p></blockquote><p><img src="https://www.baidu.com/img/bd_logo1.png" alt="pic 图片" title="百度搜索"></p><blockquote><p>如果想要指定宽高就使用<code>&lt;img&gt;</code>标签吧</p></blockquote><img src="https://www.baidu.com/img/bd_logo1.png" width="50%" height="50%" title="百度搜索"><p><strong>代码示例</strong></p><pre><code>![pic 图片](https://www.baidu.com/img/bd_logo1.png &quot;百度搜索&quot;)![pic 图片][addr][addr]:https://www.baidu.com/img/bd_logo1.png &quot;百度搜索&quot;&lt;img src=&quot;https://www.baidu.com/img/bd_logo1.png&quot; width=&quot;50%&quot; height=&quot;50%&quot; title=&quot;百度搜索&quot;&gt;</code></pre><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><blockquote><p>表格的语法使用 <code>|</code> 来创建一个一个的单元格使用 <code>-</code> 来将表头展现出来,使用 <code>:</code> 符号来对该列的对齐方式, <code>:</code> 所在侧即为向哪侧对齐</p></blockquote><table><thead><tr><th align="left">表头1</th><th align="right">表头2</th><th align="center">表头3</th></tr></thead><tbody><tr><td align="left">左对齐</td><td align="right">右对齐</td><td align="center">居中</td></tr><tr><td align="left">左对齐</td><td align="right">右对齐</td><td align="center">居中</td></tr><tr><td align="left">左对齐</td><td align="right">右对齐</td><td align="center">居中</td></tr><tr><td align="left">左对齐</td><td align="right">右对齐</td><td align="center">居中</td></tr><tr><td align="left">左对齐</td><td align="right">右对齐</td><td align="center">居中</td></tr></tbody></table><p><strong>代码示例</strong></p><pre><code>    表头1|表头2|表头3    :-|-:|:-:    左对齐|右对齐|居中    左对齐|右对齐|居中    左对齐|右对齐|居中    左对齐|右对齐|居中    左对齐|右对齐|居中</code></pre><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><blockquote><p>如果Markdown不满足需求的话可以使用原生的HTML代码去直接书写所需内容<br>书写特殊字符需要转义使用 <code>\</code> 来进行转义</p></blockquote><p>使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑</p><p><strong>代码示例</strong></p><pre><code>使用 &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt; 重启电脑</code></pre><blockquote><p>以上所有总结参考了<a href="https://www.runoob.com/markdown/md-tutorial.html" target="_blank" rel="noopener">菜鸟教程</a>Markdown的教程,文章仅作为本人学习记录使用</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 基础语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MarkDown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSLi的开场白</title>
      <link href="/2019/07/08/ssli-de-kai-chang-bai/"/>
      <url>/2019/07/08/ssli-de-kai-chang-bai/</url>
      
        <content type="html"><![CDATA[<blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;作为一个码农，天天接近15，6个小时坐在电脑前，与互联网打交道，我感觉应该在互联网找个安身之处。<br>&nbsp;&nbsp;&nbsp;&nbsp;在我写这篇文章时，它一无所有。也希望今后我会好好的善待它。  </p></blockquote><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;本博客为静态博客，也主要是为了我总结学习历程，踩坑实录，游戏经历等(最为一个游戏爱好者的操守)。以及督促以及养成总结，归纳的能力，最重要还有写文章的能力(正在博文写的我现在终于体会到了什么是书到用时方恨少)。  </p></blockquote><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;声明:该博客完全搬用hexo博客框架，以及 MOxFIVE 大佬，的 Yelee主题。作为后端工程师，前端没太多时间去研究(虽然现在后端我也是小白中的小白)，在这里诚挚感谢。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 个人记事 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
